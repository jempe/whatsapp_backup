


{{define "styles"}}

        <style>
.form_inputs {
	display: flex;
	justify-content: space-between;
	flex-direction: column;
	row-gap: 20px;
	margin-top: 20px;
}

.form_field_section {
	display: flex;
	flex-direction: column;
	row-gap: 5px;
}

.form_field_container {
	display: flex;
	flex-direction: row;
	align-items: center;
	column-gap: 10px;
	width: 100%;
}

.item_field_container {
	display: flex;
	justify-content: space-between;
	border: solid 1px #CCC;
	border-radius: 10px;
	min-height: 30px;
	padding: 10px;
	width: calc(100% - 180px);
}

.item_field_label {
	color: #000;
	font-family: var(--primary-font);
	font-size: 14px;
	font-style: normal;
	font-weight: 400;
	line-height: 110%;
	margin-bottom: 6px;
	width: 150px;
}

.button_container {
	width: 250px;
	align-self: flex-end;
}

/* actions CSS starts here */
.item_form_container.success .success_message {
	display: block;
}

button[disabled] {
	opacity: 0.5;
	pointer-events: none;
}

/* actions CSS ends here */
        </style>
{{end}}

{{define "body"}}
    <body class="body">
            {{template "sidebar" .}}

            <main class="main">
            	{{template "header" .}}

		<section class="item_form_container" id="item_form_container">
			<p class="success_message" id="success_message" ></p>
			<p class="error_message" id="error_message"></p>
			<form class="item_form" id="item_form">
				<div class="form_inputs">
					<div class="form_field_section">
						<span class="error_message"></span>
						<div class="form_field_container">

							<label class="item_field_label" for="contact_name">Name</label>
							<span class="item_field_container">
								<input class="text_field" id="contact_name" name="name" />
							</span>
						</div>
					</div>
					<div class="form_field_section">
						<span class="error_message"></span>
						<div class="form_field_container">

							<label class="item_field_label" for="contact_phone_number">Phone Number</label>
							<span class="item_field_container">
								<input class="text_field" id="contact_phone_number" name="phone_number" />
							</span>
						</div>
					</div>
					<span class="button_container">
						<button class="big_button" id="submit_button" type="submit">
							<span class="big_button_spacer"></span>
							<span class="big_button_text" id="submit_button_text">Save</span>
							<img class="big_button_arrow" src="static/img/chevron_forward_24dp_FILL0_wght400_GRAD0_opsz24.svg" alt="arrow right">
						</button>
					</span>
				</div>
			</form>
		</section>
        </main>
		<script>
const successMessageField = document.getElementById("success_message");
const errorMessageField = document.getElementById("error_message");
const itemForm = document.getElementById("item_form");
const itemFormContainer = document.getElementById("item_form_container");
const submitButton = document.getElementById("submit_button");
const fieldName = document.getElementById("contact_name");
const fieldPhoneNumber = document.getElementById("contact_phone_number");
fieldName.addEventListener("input", function () {
	itemFormContainer.classList.remove("success");

	this.closest(".form_field_section").querySelector(".error_message").innerHTML = "";
});
fieldPhoneNumber.addEventListener("input", function () {
	itemFormContainer.classList.remove("success");

	this.closest(".form_field_section").querySelector(".error_message").innerHTML = "";
});

var currentContact = 0;

const idQuery = new URLSearchParams(window.location.search).get("id");

if (parseInt(idQuery) > 0) {
	currentContact = parseInt(idQuery);
}

if (authToken) {
	getContact(currentContact);
} else {
	gotoLogin();
}

itemForm.addEventListener("submit", function (event) {
	event.preventDefault();
	saveContact();
});

async function getContact(id) {
	const contactsURL =
		`v1/contacts/${id}`;

	if (id == 0) {
		return;
	}

	const response = await fetch(contactsURL, {
		method: "GET",
		headers: getHeaders(),
	});

	if (response.status === 200) {
		const jsonData = await response.json();

		const itemData = jsonData.contact;
		fieldName.value = itemData.name;
		fieldPhoneNumber.value = itemData.phone_number;

	} else {
		gotoLogin();
	}
}

async function saveContact() {
	submitButton.disabled = true;

	let url = "v1/contacts";
	let method = "POST";

	if (currentContact > 0) {
		url = "v1/contacts/" + currentContact;
		method = "PATCH";
	}

	const data = {
		name: fieldName.value,
		phone_number: fieldPhoneNumber.value,
	};

	const response = await fetch(url, {
		method: method,
		headers: getHeaders(),
		body: JSON.stringify(data),
	});

	if (response.ok) {
		const serverResponse = await response.json();
		
		successMessageField.innerHTML = "Contact saved successfully";

		history.pushState(null, "", "admin/contact.html?id=" + serverResponse.contact.id);

		currentContact = serverResponse.contact.id;

		itemFormContainer.classList.add("success");

		submitButton.disabled = false;
	} else {
		submitButton.disabled = false;

		const error = await response.json();

		if (typeof error.error === 'string') {
			let errorMessage = error.error;

			errorMessageField.innerHTML = errorMessage;
		} else {
			for (const [key, value] of Object.entries(error.error)) {
				let errorMessage = value;

				const errorField = document.querySelector(`input[name='${key}']`);
				if (errorField && errorField.closest('.field_section') && errorField.closest('.field_section').querySelector('.error_message')) {
					errorField.closest('.field_section').querySelector('.error_message').innerHTML = errorMessage;
				} else {
					errorMessageField.innerText = errorMessage;
				}
			}
		}
	}
}

		</script>
    </body>

{{end}}
